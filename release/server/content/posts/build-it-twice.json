{
  "image":"https://picjumbo.imgix.net/HNCK8404.jpg?q=40&w=3000&sharp=40",
  "title": "Build It, Then Build It Again",
  "summary" : "Free yourself from pain when scaling.",
  "icon" : "code",
  "content": [
    {
      "type": "heading",
      "text": "Capturing That Feeling"
    },
    {
      "type": "paragraph",
      "text": "I was sat there gazing out the window, 8am and the sky was clear blue. These crisp clear autumn mornings might be pretty chilly, but they do possess a rare clean beauty you can only get at this time of year. So why did I feel so down? I slowly recoiled and looked down towards my screen, oh yes… another mess of a codebase. It’s groundhog day again."
    },
    {
      "type": "paragraph",
      "text": "How the hell does this keep happening? The architecture never seems to scale properly. Scope creep, that what it was -  these damn analysts don’t know what they are doing, they never consider the 100 or so permutations that are possible in the product. If only I was told what I was building at the beginning we wouldn’t be in this accursed mess."
    },
    {
      "type": "heading",
      "text": "Sound familiar?"
    },
    {
      "type": "paragraph",
      "text": "It’s pretty much every project I’ve ever been involved in to some degree or another. How does this happen? Well for one it’s practically impossible to gather all of the requirements for any application in advance of it being built. There are logic nuances you haven’t or couldn’t have considered, technical limitations, 3rd party integration and dependency headaches that are just waiting to blow your initial assumptions and timelines to pieces."
    },
    {
      "type": "paragraph",
      "text": ""
    }
    ]
}